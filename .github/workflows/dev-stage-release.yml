name: Publish to the Ballerina Dev\Stage Central

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select Environment
        required: true
        options:
          - DEV CENTRAL
          - STAGE CENTRAL

jobs:
  publish-release:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'ballerina-platform'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Get Ballerina Version
        run: |
          BAL_VERSION=$(grep -w 'ballerinaLangVersion' gradle.properties | cut -d= -f2 | rev | cut --complement -d- -f1 | rev) 
          if [ -z "$BAL_VERSION" ]; then
            BAL_VERSION="latest"
          fi
          echo "BAL_VERSION=$BAL_VERSION" >> $GITHUB_ENV
          echo "Ballerina Version: $BAL_VERSION"

      - name: Set Up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.0
        with:
          version: ${{ env.BAL_VERSION }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17.0.7

      - name: Check and Download JAR Files
        run: |
          libs_dir="native/libs"
          sapidoc_jar="${libs_dir}/sapidoc3.jar"
          sapjco_jar="${libs_dir}/sapjco3.jar"

          mkdir -p $libs_dir

          if [ ! -f "$sapidoc_jar" ] || [ ! -f "$sapjco_jar" ]; then
            echo 'JAR files are missing. Downloading...'

            user=${{ secrets.BALLERINA_BOT_USERNAME }}
            token=${{ secrets.BALLERINA_BOT_TOKEN }}
            encoded_auth=$(echo -n "$user:$token" | base64)

            curl -fL -o "$sapidoc_jar" -H "Authorization: Basic $encoded_auth" "https://github.com/wso2-enterprise/wso2-sap-resources/blob/master/resources/lib/sapidoc3.jar?raw=true" || { echo 'Failed to download sapidoc3.jar'; exit 1; }
            curl -fL -o "$sapjco_jar" -H "Authorization: Basic $encoded_auth" "https://github.com/wso2-enterprise/wso2-sap-resources/blob/master/resources/lib/sapjco3.jar?raw=true" || { echo 'Failed to download sapjco3.jar'; exit 1; }
          else
            echo 'JAR files already exist in native/libs/ directory.'
          fi

      - name: Set ENV Variables
        run: |
          echo -e '${{ toJson(secrets) }}' | jq -r 'to_entries[] | .key + "=" + .value' >> $GITHUB_ENV

      - name: Ballerina Central Dev Push
        if: ${{ inputs.environment == 'DEV CENTRAL' }}
        env:
          BALLERINA_DEV_CENTRAL: true
          BALLERINA_STAGE_CENTRAL: false
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_DEV_ACCESS_TOKEN }}
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          sed -i 's/version=\(.*\)-SNAPSHOT/version=\1/g' gradle.properties
          ./gradlew clean build -PpublishToCentral=true

      - name: Ballerina Central Stage Push
        if: ${{ inputs.environment == 'STAGE CENTRAL' }}
        env:
          BALLERINA_DEV_CENTRAL: false
          BALLERINA_STAGE_CENTRAL: true
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_STAGE_ACCESS_TOKEN }}
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          sed -i 's/version=\(.*\)-SNAPSHOT/version=\1/g' gradle.properties
          ./gradlew clean build -PpublishToCentral=true
