name: Publish to the Ballerina Dev/Stage Central

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select Environment
        required: true
        options:
          - DEV CENTRAL
          - STAGE CENTRAL

jobs:
  publish-release:
    runs-on: ubuntu-latest
    if: github.repository_owner == 'ballerina-platform'
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: jco

      - name: Get Ballerina Version
        run: |
          BAL_VERSION=$(grep -w 'ballerinaLangVersion' gradle.properties | cut -d= -f2 | rev | cut --complement -d- -f1 | rev) 
          if [ -z "$BAL_VERSION" ]; then
            BAL_VERSION="latest"
          fi
          echo "BAL_VERSION=$BAL_VERSION" >> $GITHUB_ENV
          echo "Ballerina Version: $BAL_VERSION"
        working-directory: jco

      - name: Set Up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.0
        with:
          version: ${{ env.BAL_VERSION }}

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17.0.7

      - name: Clone lib repo
        uses: actions/checkout@v4
        with:
          repository: wso2-enterprise/wso2-sap-resources
          token: ${{ secrets.BALLERINA_BOT_TOKEN }}
          path: libs

      - name: Copy Libs to SAP Connector Directory
        run: |
          cp -r libs/ballerina_resources/lib/. jco/native/libs/
  
      - name: Ballerina Central Dev Push
        if: ${{ inputs.environment == 'DEV CENTRAL' }}
        env:
          BALLERINA_DEV_CENTRAL: true
          BALLERINA_STAGE_CENTRAL: false
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_DEV_ACCESS_TOKEN }}
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          sed -i 's/version=\(.*\)-SNAPSHOT/version=\1/g' gradle.properties
          ./gradlew clean build -PpublishToCentral=true
        working-directory: jco

      - name: Ballerina Central Stage Push
        if: ${{ inputs.environment == 'STAGE CENTRAL' }}
        env:
          BALLERINA_DEV_CENTRAL: false
          BALLERINA_STAGE_CENTRAL: true
          BALLERINA_CENTRAL_ACCESS_TOKEN: ${{ secrets.BALLERINA_CENTRAL_STAGE_ACCESS_TOKEN }}
          packageUser: ${{ secrets.BALLERINA_BOT_USERNAME }}
          packagePAT: ${{ secrets.BALLERINA_BOT_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.BALLERINA_BOT_TOKEN }}
        run: |
          sed -i 's/version=\(.*\)-SNAPSHOT/version=\1/g' gradle.properties
          ./gradlew clean build -PpublishToCentral=true
        working-directory: jco
