name: Daily build

on:
  schedule:
    - cron: "30 2 * * *"

jobs:
  ubuntu-build:
    name: Build
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.head_ref }}-ubuntu-build
      cancel-in-progress: true
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set Up Ballerina
        uses: ballerina-platform/setup-ballerina@v1.1.0
        with:
          version: latest

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: 17.0.7

      - name: Check and Download JAR Files
        run: |
          libs_dir="native/libs"
          sapidoc_jar="${libs_dir}/sapidoc3.jar"
          sapjco_jar="${libs_dir}/sapjco3.jar"

          mkdir -p $libs_dir

          if [ ! -f "$sapidoc_jar" ] || [ ! -f "$sapjco_jar" ]; then
            echo 'JAR files are missing. Downloading...'

            user=${{ secrets.BALLERINA_BOT_USERNAME }}
            token=${{ secrets.BALLERINA_BOT_TOKEN }}
            encoded_auth=$(echo -n "$user:$token" | base64)

            curl -fL -o "$sapidoc_jar" -H "Authorization: Basic $encoded_auth" "https://github.com/wso2-enterprise/wso2-sap-resources/blob/master/resources/lib/sapidoc3.jar?raw=true" || { echo 'Failed to download sapidoc3.jar'; exit 1; }
            curl -fL -o "$sapjco_jar" -H "Authorization: Basic $encoded_auth" "https://github.com/wso2-enterprise/wso2-sap-resources/blob/master/resources/lib/sapjco3.jar?raw=true" || { echo 'Failed to download sapjco3.jar'; exit 1; }
          else
            echo 'JAR files already exist in native/libs/ directory.'
          fi

      - name: Set ENV Variables
        run: |
          echo -e '${{ toJson(secrets) }}' | jq -r 'to_entries[] | .key + "=" + .value' >> $GITHUB_ENV

      - name: Build the Package
        env:
          packageUser: ${{ github.actor }}
          packagePAT: ${{ secrets.GITHUB_TOKEN }}
        run: |
          ./gradlew build -x test -PbuildUsingDocker=nightly

      # Send notification when build fails
      - name: Notify failure
        if: ${{ failure() }}
        run: |
          curl -X POST \
          'https://api.github.com/repos/ballerina-platform/ballerina-release/dispatches' \
          -H 'Accept: application/vnd.github.v3+json' \
          -H 'Authorization: Bearer ${{ secrets.BALLERINA_BOT_TOKEN }}' \
          --data "{
            \"event_type\": \"notify-build-failure\",
            \"client_payload\": {
              \"repoName\": \"module-ballerinax-sap.jco\"
            }
          }"
